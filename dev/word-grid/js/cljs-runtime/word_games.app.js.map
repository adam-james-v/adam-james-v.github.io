{"version":3,"sources":["word_games/app.cljs"],"mappings":"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","names":["word-games.app/tile-w","word-games.app/tile-pad","word-games.app/gu","word-games.app/window","reagent.core.atom","js/window.innerWidth","js/window.innerHeight","word-games.app/ww","cljs.core/deref","cljs.core/first","word-games.app/wh","cljs.core/second","word-games.app/rect-grid","nx","ny","x-spacing","y-spacing","iter__4611__auto__","s__81566","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","xs__6308__auto__","iterys__4607__auto__","s__81568","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__81570","cljs.core/chunk-buffer","i__81569","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__81567","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","fs__4608__auto__","cljs.core.concat","iter__81565","b","cljs.core.range","a","word-games.app/tiles","letters","cljs.core/shuffle","cljs.core.repeat","f","pos","letter","wwh","Math/floor","whh","grid","Math/ceil","p1__81571#","cljs.core.map","svg-clj.utils/v+","p1__81572#","p1__81573#","cljs.core/mod","tiles","cljs.core/zipmap","word-games.app/board-pos","word-games.app/split-when","s","cljs.core.reduce","p__81574","vec__81575","cljs.core.nth","acc","cljs.core.conj","cljs.core.update_in","cljs.core/conj","cljs.core.partition","word-games.app/overlaps?","cljs.core/vals","cljs.core.filter","cljs.core/frequencies","p1__81578#","cljs.core/some","cljs.core._EQ_","word-games.app/get-ids-by-pos","ts","p__81580","vec__81581","id","tile","cljs.core.assoc","p1__81579#","word-games.app/move-tile-down","p1__81584#","word-games.app/fix-overlaps","cljs.core/not","positions","p__81587","vec__81588","map__81591","cljs.core/--destructure-map","cljs.core.get","_","overlap-ids","p1__81585#","p1__81586#","word-games.app/fix-overlaps!","fixed","cljs.core/reset!","word-games.app/visible?","cljs.core.get_in","word-games.app/snap-tiles!","snap-tile","p__81592","vec__81593","x","y","seq__81596","chunk__81597","count__81598","i__81599","c__4638__auto__","cljs.core/chunk-first","cljs.core/next","cljs.core.swap_BANG_","cljs.core/update-in","word-games.app/update-state!","word-games.app/get-words","p__81606","vec__81607","map__81610","visible?","rows","cljs.core.remove","cljs.core/nil?","cljs.core.sort_by","p1__81600#","cljs.core.partition_by","p1__81601#","cljs.core.mapcat","cljs.core.not_EQ_","cljs.core.apply","cljs.core/str","p1__81602#","cols","p1__81603#","p1__81604#","p1__81605#","word-games.app/get-client-mid","evt","r","left","top","bottom","right","w","h","word-games.app/prevent-motion","e","js/window.scrollTo","goog.events/listen","js/window","goog.events.EventType/SCROLL","goog.events.EventType/TOUCHMOVE","word-games.app/mouse-move-handler","offset","cx","cy","ox","oy","cljs.core/assoc-in","word-games.app/mouse-up-handler","on-move","goog.events/unlisten","goog.events.EventType/MOUSEMOVE","word-games.app/mouse-down-handler","map__81611","vec__81612","mid","bx","by","svg-clj.utils/v*","goog.events.EventType/MOUSEUP","word-games.app/touch-move-handler","word-games.app/touch-end-handler","word-games.app/touch-start-handler","map__81615","vec__81616","goog.events.EventType/TOUCHEND","p__81619","vec__81620","map__81623","word-games.app/tile","svg_clj.elements.g","svg-clj.elements/rect","svg-clj.transforms/style","svg-clj.elements/text","svg-clj.transforms/translate","word-games.app/wordlist","map__81624","scrabble-finder-url","horizontal","vertical","lh","vlist-offset","idx","t","cljs.core.map_indexed","word-games.app/center-button-pos","word-games.app/center!","word-games.app/center-button","word-games.app/dump-target-line","word-games.app/dump-button-pos","word-games.app/show-dump-target","p__81631","vec__81632","map__81635","p__81626","vec__81627","map__81630","pta","p1__81625#","svg-clj.utils/distance","ptc","ptb","svg-clj.parametric/line","svg_clj.parametric.circle","cljs.core.rand","svg_clj.path.bezier","js/setTimeout","word-games.app/dump!","p__81642","vec__81643","map__81646","p__81637","vec__81638","map__81641","to-dump","p1__81636#","to-show","p__81652","vec__81653","map__81656","p__81647","vec__81648","map__81651","cljs.core.take","seq__81657","chunk__81658","count__81659","i__81660","cljs.core/vector","cljs.core.sort","position","svg-clj.utils/v-","word-games.app/dump-button","word-games.app/add-button-pos","word-games.app/add!","p__81666","vec__81667","map__81670","p__81661","vec__81662","map__81665","p__81676","vec__81677","map__81680","p__81671","vec__81672","map__81675","seq__81681","chunk__81682","count__81683","i__81684","word-games.app/add-button","word-games.app/share-button-pos","word-games.app/share!","text","js/navigator.clipboard.writeText","word-games.app/share-button","word-games.app/titles","word-games.app/rand-title","word-games.app/title","word-games.app/board","table","svg_clj.composites.svg","word-games.app/app","word-games.app/mount","app","seq__81685","chunk__81686","count__81687","i__81688","goog.events.EventType/RESIZE","G__81689","G__81690","reagent.core/render-component","js/document.getElementById","word-games.app/init","word-games.app/re-render"],"sourcesContent":["(ns word-games.app\n  (:require [clojure.string :as str]\n            [reagent.core :as r]\n            [svg-clj.utils :as utils]\n            [svg-clj.elements :as el]\n            [svg-clj.path :as path]\n            [svg-clj.transforms :as tf]\n            [svg-clj.parametric :as p]\n            [svg-clj.layout :as lo]\n            [svg-clj.composites :as comp :refer [svg]]\n            [goog.events :as events])\n  (:import [goog.events EventType]))\n\n;; Constants and references\n\n(def tile-w 40)\n(def tile-pad 4)\n;; grid-unit\n(def gu (+ tile-w tile-pad))\n\n(def window (r/atom [js/window.innerWidth js/window.innerHeight]))\n(defn ww [] (first  @window))\n(defn wh [] (second @window))\n\n;; one tile -> {:pos [0 0] :letter \"A\"}\n(defn rect-grid\n  [nx ny x-spacing y-spacing]\n  (for [b (range ny)\n        a (range nx)]\n    [(* a x-spacing) (* b y-spacing)]))\n\n(def tiles\n  (let [letters (shuffle\n                 (concat (repeat 13 \"A\")\n                         (repeat  3 \"B\")\n                         (repeat  3 \"C\")\n                         (repeat  6 \"D\")\n                         (repeat 18 \"E\")\n                         (repeat  3 \"F\")\n                         (repeat  4 \"G\")\n                         (repeat  3 \"H\")\n                         (repeat 12 \"I\")\n                         (repeat  2 \"J\")\n                         (repeat  2 \"K\")\n                         (repeat  5 \"L\")\n                         (repeat  3 \"M\")\n                         (repeat  8 \"N\")\n                         (repeat 11 \"O\")\n                         (repeat  3 \"P\")\n                         (repeat  2 \"Q\")\n                         (repeat  9 \"R\")\n                         (repeat  6 \"S\")\n                         (repeat  9 \"T\")\n                         (repeat  6 \"U\")\n                         (repeat  3 \"V\")\n                         (repeat  3 \"W\")\n                         (repeat  2 \"X\")\n                         (repeat  3 \"Y\")\n                         (repeat  2 \"Z\")))\n        f (fn [pos letter] {:pos pos :letter letter :visible? false})\n        wwh (Math/floor (/ (ww) 2))\n        whh (Math/floor (/ (wh) 2))\n        grid (->> (rect-grid 7 (Math/ceil (/ (count letters) 7)) gu gu)\n                  #_(partition 2)\n                  #_(map first)\n                  (map #(utils/v+ % [(/ gu 2) (/ gu 2)]))\n                  (map #(utils/v+ % [(* gu -3) (* gu -1)]))\n                  (map #(utils/v+ % [(- wwh (mod wwh gu))\n                                     (- whh (mod whh gu))])))\n        tiles (map f grid letters)]\n    (r/atom (zipmap (range) tiles))))\n\n(def board-pos (r/atom [(/ gu 2) (/ gu 2)]))\n\n;; https://stackoverflow.com/a/25123243\n(defn split-when [f s]\n  (reduce (fn [acc [a b]]\n            (if (f b a)\n              (conj acc [b])\n              (update-in acc [(dec (count acc))] conj b)))\n          [[(first s)]]\n          (partition 2 1 s)))\n\n(defn- overlaps?\n  [tiles]\n  (->> tiles\n       vals\n       (filter :visible?)\n       (map :pos)\n       frequencies\n       vals\n       (some #(= 2 %))))\n\n(defn- get-ids-by-pos\n  [pos tiles]\n  (let [ts (map (fn [[id tile]] (assoc tile :id id)) tiles)]\n    (->> ts\n         (filter #(= pos (:pos %)))\n         (map :id))))\n\n(defn- move-tile-down\n  [id tiles]\n  (update-in tiles [id :pos] #(utils/v+ % [0 gu])))\n\n(defn fix-overlaps\n  [tiles]\n  (if (not (overlaps? tiles))\n    tiles\n    (let [positions (map (fn [[_ {:keys [pos]}]] pos) tiles)\n          overlap-ids (filter #(> (count %) 1) (map #(get-ids-by-pos % tiles) positions))]\n      (recur (move-tile-down (first (first overlap-ids)) tiles)))))\n\n(defn fix-overlaps! []\n  (let [fixed (fix-overlaps @tiles)]\n    (reset! tiles fixed)))\n\n(defn visible?\n  [id]\n  (get-in @tiles [id :visible?]))\n\n(defn snap-tiles! []\n  (let [snap-tile\n        (fn [[x y]] [(Math/floor (- (+ x (/ gu 2.0)) (mod x gu)))\n                     (Math/floor (- (+ y (/ gu 2.0)) (mod y gu)))])]\n    (doseq [id (filter visible? (range 145))]\n      (swap! tiles update-in [id :pos] snap-tile))))\n\n(defn update-state! []\n  (snap-tiles!)\n  (fix-overlaps!))\n\n(defn get-words []\n  (let [f (fn [[_ {:keys [pos letter visible?]}]]\n            (when visible?\n              {:x (int (/ (first pos) gu))\n               :y (int (/ (second pos) gu))\n               :letter letter}))\n        rows (->> (map f @tiles)\n                  (remove nil?)\n                  (sort-by :y)\n                  (partition-by #(get % :y))\n                  (map (fn [s] (sort-by :x s)))\n                  (mapcat #(split-when (fn [a b] (not= (:x a) (inc (:x b)))) %))\n                  (map (fn [s] (apply str (map :letter s))))\n                  (remove #(= 1 (count %))))\n        cols (->> (map f @tiles)\n                  (remove nil?)\n                  (sort-by :x)\n                  (partition-by #(get % :x))\n                  (map (fn [s] (sort-by :y s)))\n                  (mapcat #(split-when (fn [a b] (not= (:y a) (inc (:y b)))) %))\n                  (map (fn [s] (apply str (map :letter s))))\n                  (remove #(= 1 (count %))))]\n    {:horizontal rows\n     :vertical cols}))\n\n;; Utility functions\n(defn get-client-mid [evt]\n  (let [r (.getBoundingClientRect (.-target evt))\n        left (.-left r)\n        top (.-top r)\n        bottom (.-bottom r)\n        right (.-right r)\n        w (- right left)\n        h (- bottom top)]\n    {:x (- right (/ w 2.0))\n     :y (- bottom (/ h 2.0))}))\n\n(defn prevent-motion [e]\n    (js/window.scrollTo 0 0)\n    (e.preventDefault)\n    (e.stopPropagation))\n\n(events/listen js/window EventType.SCROLL prevent-motion)\n(events/listen js/window EventType.TOUCHMOVE prevent-motion)\n\n;; Event handlers\n(defn mouse-move-handler [id offset]\n  (fn [evt]\n    (let [cx (.-clientX evt)\n          cy (.-clientY evt)\n          ox (:x offset)\n          oy (:y offset)]\n      (if (= id :board)\n        (reset! board-pos [(Math/floor (- cx ox))\n                           (Math/floor (- cy oy))])\n        (swap! tiles assoc-in [id :pos] [(Math/floor (- cx ox))\n                                         (Math/floor (- cy oy))])))))\n\n(defn mouse-up-handler [on-move]\n  (fn me [evt]\n    (events/unlisten js/window EventType.MOUSEMOVE\n                     on-move)))\n\n(defn mouse-down-handler [id]\n  (fn [e]\n    (let [{:keys [x y] :as mid} (get-client-mid e)\n          [bx by] (utils/v* [-1 -1] @board-pos)\n          cx (.-clientX e)\n          cy (.-clientY e)\n          offset (if (= id :board)\n                   {:x (+ cx bx) :y (+ cy by)}\n                   {:x (- cx (when-not (= id :board) x) bx)\n                    :y (- cy (when-not (= id :board) y) by)})\n          on-move (mouse-move-handler id offset)]\n      (events/listen js/window EventType.MOUSEMOVE\n                     on-move)\n      (events/listen js/window EventType.MOUSEUP\n                     (mouse-up-handler on-move)))))\n\n(defn touch-move-handler [id offset]\n  (fn [evt]\n    (let [cx (.-clientX evt)\n          cy (.-clientY evt)\n          ox (:x offset)\n          oy (:y offset)]\n      (if (= id :board)\n        (reset! board-pos [(Math/floor (- cx ox))\n                           (Math/floor (- cy oy))])\n        (swap! tiles assoc-in [id :pos] [(Math/floor (- cx ox))\n                                         (Math/floor (- cy oy))])))))\n\n(defn touch-end-handler [on-move]\n  (fn te [evt]\n    (events/unlisten js/window EventType.TOUCHMOVE\n                     on-move)))\n\n(defn touch-start-handler [id]\n  (fn [e]\n    (let [{:keys [x y] :as mid} (get-client-mid e)\n          [bx by] (utils/v* [-1 -1] @board-pos)\n          cx (.-pageX (first (.-changedTouches e)))\n          cy (.-pageY (first (.-changedTouches e)))\n          offset (if (= id :board)\n                   {:x (+ cx bx) :y (+ cy by)}\n                   {:x (- cx (when-not (= id :board) x) bx)\n                    :y (- cy (when-not (= id :board) y) by)})\n          on-move (touch-move-handler id offset)]\n      (e.preventDefault)\n      (events/listen js/window EventType.TOUCHMOVE\n                     on-move)\n      (events/listen js/window EventType.TOUCHEND\n                     (touch-end-handler on-move)))))\n\n;; components\n(defn tile [[id {:keys [pos letter visible?]}]]\n  (when visible?\n    (-> (el/g\n         #_(el/g (for [i (reverse (range 0 4))]\n                 (-> (el/rect tile-w tile-w)\n                     (tf/translate [(* i 0.8) i])\n                     (tf/style {:rx 5\n                                :fill \"#EBE89A\"\n                                :stroke \"#9E9C59\"\n                                :stroke-width 1.5}))))\n         (-> (el/rect tile-w tile-w)\n             (tf/style {:rx 5\n                        :fill \"#EBE89A\"\n                        :stroke \"#9E9C59\"\n                        :stroke-width 1\n                        #_#_:filter \"drop-shadow(1px 1px 4px rgb(0 0 0 / 0.2))\"}))\n         #_(el/text (str pos))\n         (-> (el/text letter)\n             (tf/translate [0 4])\n             (tf/style {:fill \"#9E6067\"\n                        :font-size (str (* 0.625 gu) \"px\")\n                        :font-family \"Palatino\"\n                        :style {:user-select \"none\"\n                                :-moz-user-select \"none\"\n                                :-webkit-user-select \"none\"}})))\n        \n        (tf/translate (utils/v+ pos @board-pos))\n        (tf/style {:on-mouse-down (mouse-down-handler id)\n                   :on-touch-start (touch-start-handler id)}))))\n\n(defn wordlist []\n  (let [scrabble-finder-url \"https://scrabble.merriam.com/finder/\"\n        {:keys [horizontal vertical]} (get-words)\n        lh 20\n        vlist-offset (* (+ 3 (count horizontal)) lh)\n        f (fn [pos]\n            (fn [idx t]\n              [:a {:key idx\n                   :xlinkHref (str scrabble-finder-url t)\n                   :target \"_blank\"}\n               (-> (el/text t)\n                   (tf/translate pos)\n                   (tf/translate [0 (* idx lh)])\n                   (tf/style {:fill \"#9E6067\"\n                              :text-decoration \"underline\"}))]))]\n    (el/g\n     (-> (el/text \"HORIZONTAL:\")\n         (tf/translate [50 lh]))\n     (map-indexed (f [50 (* 2 lh)]) horizontal)\n     (-> (el/text \"VERTICAL:\")\n         (tf/translate [50 vlist-offset]))\n     (map-indexed (f [50 (+ lh vlist-offset)]) vertical))))\n\n(defn center-button-pos []\n  [(* 1 gu)\n   (- (wh) (* 0.625 gu))])\n\n(defn center! [e]\n  (reset! board-pos [0 0]))\n\n(defn center-button []\n  (-> (el/g\n       (-> (el/rect (* 2 tile-w) tile-w)\n           (tf/style {:rx 5\n                      :stroke \"#596B4C\"\n                      :stroke-width 1\n                      :fill \"#C3EBA7\"\n                      :filter \"drop-shadow(1px 1px 4px rgb(0 0 0 / 0.2))\"}))\n       (-> (el/text \"CENTER\")\n           (tf/translate [0 3])\n           (tf/style {:fill \"#596B4C\"\n                      :opacity 1\n                      :font-size (str (* 0.375 gu) \"px\") \n                      :font-family \"Palatino\"\n                      :style {:user-select \"none\"\n                              :-moz-user-select \"none\"\n                              :-webkit-user-select \"none\"}})))\n      (tf/translate (center-button-pos))\n      (tf/style {:on-click center!\n                 #_#_:on-touch-start center!})))\n\n(def dump-target-line (r/atom nil))\n(defn dump-button-pos []\n  [(- (ww) (* 1 gu))\n   (- (wh) (* 0.625 gu))])\n(defn show-dump-target [e]\n  (let [positions (->> @tiles\n                       (filter (fn [[_ {:keys [visible?]}]] visible?))\n                       (map (fn [[_ {:keys [pos]}]] pos)))\n        pta (->> (sort-by #(utils/distance (utils/v+ % @board-pos) (dump-button-pos)) positions)\n                first\n                (utils/v+ @board-pos))\n        ptc (dump-button-pos)\n        ptb (utils/v+ ((p/line pta ptc) 0.5) ((p/circle (* 4 gu)) (rand)))]\n    (reset! dump-target-line\n            (-> (path/bezier pta ptb ptc)\n                (tf/style {:stroke-linecap \"round\"\n                           :fill \"none\"\n                           :stroke-width 7\n                           :stroke \"#EB838E\"\n                           :opacity 0.3})))\n    (js/setTimeout #(reset! dump-target-line nil) 700)))\n\n(defn dump! [e]\n  (let [ts @tiles\n        positions (->> ts\n                       (filter (fn [[_ {:keys [visible?]}]] visible?))\n                       (map (fn [[id {:keys [pos]}]] [id pos])))\n        to-dump (->> positions\n                     (sort-by #(utils/distance (utils/v+ (second %) @board-pos) (dump-button-pos)))\n                     first)\n        to-show (->> ts\n                     (remove (fn [[_ {:keys [visible?]}]] visible?))\n                     (map (fn [[id {:keys [pos]}]] id))\n                     (take 3))]\n    (doseq [to-show (map-indexed vector (sort to-show))]\n      (let [position [(- (/ (ww) 2) (mod (/ (ww) 2) gu) (- gu) (* (first to-show) gu))\n                      (- (wh) (mod (wh) gu) (* 2 gu))]]\n        (swap! tiles assoc-in [(second to-show) :pos] (utils/v- position @board-pos))\n        (swap! tiles assoc-in [(second to-show) :visible?] true)))\n    (swap! tiles assoc-in [(first to-dump) :visible?] false)))\n\n(defn dump-button []\n  (-> (el/g\n       (-> (el/rect (* 2 tile-w) tile-w)\n           (tf/style {:rx 5\n                      :stroke \"#9E6067\"\n                      :stroke-width 1\n                      :fill \"#EB838E\"\n                      :filter \"drop-shadow(1px 1px 4px rgb(0 0 0 / 0.2))\"}))\n       (-> (el/text \"DUMP\")\n           (tf/translate [0 3])\n           (tf/style {:fill \"#9E6067\"\n                      :opacity 1\n                      :font-size (str (* 0.375 gu) \"px\") \n                      :font-family \"Palatino\"\n                      :style {:user-select \"none\"\n                              :-moz-user-select \"none\"\n                              :-webkit-user-select \"none\"}})))\n      (tf/translate (dump-button-pos))\n      (tf/style {:on-click dump!\n                 :on-touch-end dump!\n                 :on-mouse-over show-dump-target\n                 :on-touch-start show-dump-target})))\n\n(defn add-button-pos []\n  [(/ (ww) 2)\n   (- (wh) (* 0.625 gu))])\n\n(defn add! []\n  (let [ts @tiles\n        positions (->> ts\n                       (filter (fn [[_ {:keys [visible?]}]] visible?))\n                       (map (fn [[id {:keys [pos]}]] [id pos])))\n        to-show (->> ts\n                     (remove (fn [[_ {:keys [visible?]}]] visible?))\n                     (map (fn [[id {:keys [pos]}]] id))\n                     (take 1))]\n    (doseq [to-show (map-indexed vector (sort to-show))]\n      (let [position [(- (/ (ww) 2) (mod (/ (ww) 2) gu) (- gu) (* (first to-show) gu))\n                      (- (wh) (mod (wh) gu) (* 2 gu))]]\n        (swap! tiles assoc-in [(second to-show) :pos] (utils/v- position @board-pos))\n        (swap! tiles assoc-in [(second to-show) :visible?] true)))))\n\n(defn add-button []\n  (-> (el/g\n       (-> (el/rect (* 2 tile-w) tile-w)\n           (tf/style {:rx 5\n                      :stroke \"#596B4C\"\n                      :stroke-width 1\n                      :fill \"#C3EBA7\"\n                      :filter \"drop-shadow(1px 1px 4px rgb(0 0 0 / 0.2))\"}))\n       (-> (el/text \"ADD\")\n           (tf/translate [0 3])\n           (tf/style {:fill \"#596B4C\"\n                      :opacity 1\n                      :font-size (str (* 0.375 gu) \"px\") \n                      :font-family \"Palatino\"\n                      :style {:user-select \"none\"\n                              :-moz-user-select \"none\"\n                              :-webkit-user-select \"none\"}})))\n      (tf/translate (add-button-pos))\n      (tf/style {:on-click add!\n                 #_#_:on-touch-end add!})))\n\n(defn share-button-pos []\n  [(- (ww) (* 1 gu))\n   (* 0.625 gu)])\n\n(defn share! []\n  (let [text \"ON CLIPBOARD\"]\n    (js/navigator.clipboard.writeText text)))\n\n(defn share-button []\n  (-> (el/g\n       (-> (el/rect (* 2 tile-w) tile-w)\n           (tf/style {:rx 5\n                      :stroke \"#596B4C\"\n                      :stroke-width 1\n                      :fill \"#C3EBA7\"\n                      :filter \"drop-shadow(1px 1px 4px rgb(0 0 0 / 0.2))\"}))\n       (-> (el/text \"SHARE\")\n           (tf/translate [0 3])\n           (tf/style {:fill \"#596B4C\"\n                      :opacity 1\n                      :font-size (str (* 0.375 gu) \"px\") \n                      :font-family \"Palatino\"\n                      :style {:user-select \"none\"\n                              :-moz-user-select \"none\"\n                              :-webkit-user-select \"none\"}})))\n      (tf/translate (share-button-pos))\n      (tf/style {:on-click share!\n                 #_#_:on-touch-end add!})))\n\n(def titles\n  [\"Wow, it's words!\"\n   \"Oops, all letters!\"\n   \"You've seen a crossword before, right?\"\n   \"WWWWWWOOOOORRRDDDDS!\"\n   \"I like word games, ok?\"\n   \"Naming things is hard. This is a game with letters.\"\n   \"grid + letters = words + fun\"\n   \"Clean up these tiles, please.\"\n   \"Grams. Grams. Grams.\"\n   \"Letters make words. Words are fun.\"\n   \"Do not tolerate intolerance.\"\n   \"My name is Adam and I've made this game for you (and me).\"\n   \"Please be kind to other people.\"])\n(def rand-title (first (shuffle titles)))\n\n(defn title []\n  (-> (el/text rand-title)\n      (tf/translate [(/ (ww) 2) (* (wh) 0.4)])\n      (tf/style {:fill \"#9E6067\"\n                 :opacity 0.1\n                 :font-size \"40px\"\n                 :font-family \"Palatino\"\n                 :style {:user-select \"none\"\n                         :-moz-user-select \"none\"\n                         :-webkit-user-select \"none\"}})))\n\n(defn board []\n  (let [table (-> (el/rect (* 4 (ww)) (* 4 (wh)))\n                  (tf/translate [(* 2 (ww)) (* 2 (wh))])\n                  (tf/style {:fill \"#B2D8EB\"\n                             :on-mouse-down (mouse-down-handler :board)\n                             :on-touch-start (touch-start-handler :board)}))]\n    (-> (el/g\n         table\n         [title]\n\n         ;; debug\n         #_(-> (el/text (str @window))\n             (tf/translate [(/ (ww) 2) (/ (wh) 2)]))\n\n         [wordlist]\n         (el/g (map tile @tiles))\n         @dump-target-line\n         [center-button]\n         [add-button]\n         [dump-button]\n         #_[share-button])\n        (svg (ww) (wh))\n        (tf/style {:style {:position \"absolute\" :left 0 :top 0}}))))\n\n(defn app []\n  [:<>\n   [board]\n   [:span (str @board-pos)]])\n\n(defn mount [app]\n  (doseq [id (range 21)] (swap! tiles assoc-in [id :visible?] true))\n  (events/listen js/window EventType.MOUSEUP update-state!)\n  (events/listen js/window EventType.TOUCHEND update-state!)\n  (events/listen js/window EventType.RESIZE #(reset! window [js/window.innerWidth js/window.innerHeight]))\n  (r/render-component [app] (js/document.getElementById \"root\")))\n\n(defn init [] (mount app))\n(defn ^:dev/after-load re-render [] (mount app))\n"]}