{"version":3,"sources":["svg_clj/composites.cljc"],"mappings":"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","names":["var_args","G__38348","svg-clj.composites/svg","js/Error","content","vec__38353","cljs.core.nth","vec__38356","vec__38359","w","h","svg-clj.transforms/bb-dims","x","y","_","svg-clj.transforms/bounds","clojure.string.join","sc","svg_clj.composites.svg","G__38370","svg-clj.composites/arrow","a","b","tip-pts","tip-shape","svg-clj.elements/polygon","svg_clj.composites.arrow","vec__38372","mx","my","svg-clj.transforms/centroid","r","svg-clj.utils/to-deg","p1__38365#","p2__38366#","cljs.core.apply","Math/atan2","svg-clj.utils/v-","svg_clj.elements.g","svg-clj.elements/line","svg-clj.transforms/translate","svg-clj.transforms/rotate","svg-clj.transforms/style","svg-clj.composites/label","font-size","text"],"sourcesContent":["(ns svg-clj.composites\n  \"Provides functions that combine transforms and primitive elements to make more complicated shapes.\n\n  Additionally, the SVG container function is provided here as it relies on [[svg-clj.transforms]] to allow automatic veiwBox setup.\"\n  (:require [clojure.string :as str]\n            [svg-clj.utils :as utils]\n            [svg-clj.elements :as el]\n            [svg-clj.transforms :as tf]))\n\n(defn svg\n   \"Wraps `content` in an SVG container element whose width, height, and viewBox properties are automatically calculated when `w`, `h`, and `sc` are omitted.\n   The SVG container is optionally parameterized by width `w`, height `h`, and scale `sc`.\"\n  ([content]\n   (let [[w h] (tf/bb-dims content)\n         [[x y] _ _ _] (tf/bounds content)]\n     [:svg {:width  w\n            :height h\n            :viewBox (str/join \" \" [x y w h])\n            :xmlns \"http://www.w3.org/2000/svg\"}\n      content]))\n\n  ([content w h]\n   [:svg {:width  w\n          :height h\n          :viewBox (str \"0 0 \" w \" \" h)\n          :xmlns \"http://www.w3.org/2000/svg\"}\n    content])\n\n  ([content w h sc]\n   (svg [:g {:transform (str \"scale(\" sc \")\")} content] w h)))\n\n(defn arrow\n  ([a b]\n   (let [tip-pts [ [0 0] [5 0] [5 5] ]\n         tip-shape (el/polygon tip-pts)]\n     (arrow a b tip-shape)))\n\n  ([a b tip-shape]\n   (let [[mx my] (tf/centroid tip-shape)\n         r (utils/to-deg (apply #(Math/atan2 %1 %2) (utils/v- b a)))]\n     (->\n      (el/g\n       (el/line a b)\n       (-> tip-shape\n           (tf/translate [(- mx) (- my)])\n           (tf/rotate (- 315 r))\n           (tf/translate a)\n           (tf/style {})\n           (tf/style {:fill \"none\"\n                      :stroke \"none\"}))\n       (-> tip-shape\n           (tf/translate [(- mx) (- my)])\n           (tf/rotate (- 135 r))\n           (tf/translate b)))))))\n\n(defn label\n  [font-size text]\n  [:text \n   {:x 0 :y 0 \n    :style {:font-family \"Verdana\"\n            :text-anchor \"middle\"\n            :dominant-baseline \"middle\"\n            :font-size font-size}} text])\n"]}